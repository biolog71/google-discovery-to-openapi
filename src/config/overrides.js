export const resourceNameOverridesByOperationId = {
    compute: {
        'compute.securityPolicies.aggregatedList' : 'security_policies_aggregated',
        'compute.backendServices.aggregatedList' : 'backend_services_aggregated',
        'compute.healthChecks.aggregatedList' : 'health_checks_aggregated',
        'compute.sslCertificates.aggregatedList' : 'ssl_certificates_aggregated',
        'compute.urlMaps.aggregatedList' : 'url_maps_aggregated',
        'compute.targetHttpProxies.aggregatedList' : 'target_http_proxies_aggregated',
        'compute.globalOperations.aggregatedList' : 'global_operations_aggregated',
        'compute.targetHttpsProxies.aggregatedList' : 'target_https_proxies_aggregated',
        'compute.targetTcpProxies.aggregatedList' : 'target_tcp_proxies_aggregated',
        'compute.sslPolicies.aggregatedList' : 'ssl_policies_aggregated', 
        'compute.instanceTemplates.aggregatedList' : 'instance_templates_aggregated',       
    },  
    cloudbuild : {
        'cloudbuild.projects.locations.bitbucketServerConfigs.repos.list' : 'bitbucket_repos',
        'cloudbuild.projects.locations.gitLabConfigs.repos.list' : 'gitlab_repos',
    },
    discoveryengine: {
        'discoveryengine.projects.locations.collections.dataStores.siteSearchEngine.operations.list' : 'search_engine_operations',
        'discoveryengine.projects.locations.collections.dataStores.siteSearchEngine.targetSites.operations.list' : 'target_site_operations',
    },
    integrations: {
        'integrations.projects.locations.integrations.executeEvent' : 'skip_this_resource',
    },
    osconfig: {
        'osconfig.projects.locations.instances.vulnerabilityReports.get' : 'vulnerability_report',
        'osconfig.projects.locations.instances.osPolicyAssignments.reports.get' : 'report',
    },   
    prod_tt_sasportal: {
        'prod_tt_sasportal.customers.nodes.get' : 'customer_node',
		'prod_tt_sasportal.customers.nodes.list' : 'customer_nodes',
		'prod_tt_sasportal.customers.nodes.nodes.list' : 'customer_nodes',
		'prod_tt_sasportal.customers.nodes.create' : 'customer_nodes',
		'prod_tt_sasportal.customers.nodes.nodes.create' : 'customer_nodes',
		'prod_tt_sasportal.customers.nodes.delete' : 'customer_nodes',
		'prod_tt_sasportal.nodes.get' : 'node',
		'prod_tt_sasportal.nodes.nodes.get' : 'node',	
		'prod_tt_sasportal.nodes.nodes.list' : 'nodes',
		'prod_tt_sasportal.nodes.nodes.nodes.list' : 'nodes',
		'prod_tt_sasportal.nodes.nodes.create' : 'nodes',
		'prod_tt_sasportal.nodes.nodes.nodes.create' : 'nodes',
		'prod_tt_sasportal.nodes.nodes.delete' : 'nodes',		
    },    
    sasportal: {
        'sasportal.customers.nodes.list' : 'customer_nodes',
		'sasportal.customers.nodes.get' : 'customer_nodes',
		'sasportal.customers.nodes.nodes.list' : 'customer_nodes',
		'sasportal.customers.nodes.nodes.create' : 'customer_nodes',
		'sasportal.customers.nodes.create' : 'customer_nodes',
		'sasportal.customers.nodes.delete' : 'customer_nodes',
        'sasportal.customers.nodes.get' : 'customer_node',
		'sasportal.nodes.get' : 'node',
		'sasportal.nodes.nodes.get' : 'node',
		'sasportal.nodes.nodes.nodes.list' : 'nodes',
		'sasportal.nodes.nodes.list' : 'nodes',
		'sasportal.nodes.nodes.nodes.create' : 'nodes',
		'sasportal.nodes.nodes.create' : 'nodes',
		'sasportal.nodes.nodes.delete' : 'nodes',
    },  
    securitycenter: {
        'securitycenter.projects.securityHealthAnalyticsSettings.customModules.list' : 'security_health_analytics_modules',
        'securitycenter.projects.securityHealthAnalyticsSettings.customModules.get' : 'security_health_analytics_modules',
        'securitycenter.organizations.securityHealthAnalyticsSettings.customModules.get' : 'security_health_analytics_modules',
        'securitycenter.folders.securityHealthAnalyticsSettings.customModules.get' : 'security_health_analytics_modules',
        'securitycenter.organizations.securityHealthAnalyticsSettings.customModules.list' : 'security_health_analytics_modules',
        'securitycenter.folders.securityHealthAnalyticsSettings.customModules.list' : 'security_health_analytics_modules',
        'securitycenter.projects.securityHealthAnalyticsSettings.customModules.create' : 'security_health_analytics_modules',
        'securitycenter.organizations.securityHealthAnalyticsSettings.customModules.create' : 'security_health_analytics_modules',
        'securitycenter.folders.securityHealthAnalyticsSettings.customModules.create' : 'security_health_analytics_modules',
        'securitycenter.projects.securityHealthAnalyticsSettings.customModules.delete' : 'security_health_analytics_modules',
        'securitycenter.organizations.securityHealthAnalyticsSettings.customModules.delete' : 'security_health_analytics_modules',
        'securitycenter.folders.securityHealthAnalyticsSettings.customModules.delete' : 'security_health_analytics_modules',
        'securitycenter.projects.eventThreatDetectionSettings.customModules.list' : 'event_threat_detection_modules',
        'securitycenter.organizations.eventThreatDetectionSettings.customModules.list' : 'event_threat_detection_modules',
        'securitycenter.folders.eventThreatDetectionSettings.customModules.list' : 'event_threat_detection_modules',
        'securitycenter.projects.eventThreatDetectionSettings.customModules.create' : 'event_threat_detection_modules',
        'securitycenter.organizations.eventThreatDetectionSettings.customModules.create' : 'event_threat_detection_modules',
        'securitycenter.folders.eventThreatDetectionSettings.customModules.create' : 'event_threat_detection_modules',
		'securitycenter.projects.eventThreatDetectionSettings.customModules.delete' : 'event_threat_detection_modules',
        'securitycenter.organizations.eventThreatDetectionSettings.customModules.delete' : 'event_threat_detection_modules',
        'securitycenter.folders.eventThreatDetectionSettings.customModules.delete' : 'event_threat_detection_modules',
    },    
    servicenetworking: {
        'servicenetworking.services.dnsRecordSets.get' : 'dns_record_set',
    },
    videointelligence: {
        'videointelligence.operations.projects.locations.operations.cancel' : 'long_running_operations',
        'videointelligence.operations.projects.locations.operations.delete' : 'long_running_operations',
        'videointelligence.operations.projects.locations.operations.get' : 'long_running_operations',
    },   
};

export const objectKeyByOperationId = {
    accesscontextmanager: {
        'accesscontextmanager.operations.list' : '$.operations',
    },
    analyticshub: {
        'analyticshub.projects.locations.dataExchanges.listings.list' : '$.listings',
        'analyticshub.projects.locations.dataExchanges.list' : '$.dataExchanges',
    },
    apigateway: {
        'apigateway.projects.locations.apis.list' : '$.apis',
        'apigateway.projects.locations.apis.configs.list' : '$.apiConfigs',
        'apigateway.projects.locations.gateways.list' : '$.gateways',
        'apigateway.projects.locations.list' : '$.locations',
        'apigateway.projects.locations.operations.list' : '$.operations',
    },
    apigee: {
        'apigee.organizations.appgroups.list' : '$.appGroups',
        'apigee.organizations.environments.archiveDeployments.list' : '$.archiveDeployments',
        'apigee.organizations.environments.apis.revisions.debugsessions.list' : '$.sessions',
        'apigee.organizations.endpointAttachments.list' : '$.endpointAttachments',
        'apigee.organizations.keyvaluemaps.entries.list' : '$.keyValueEntries',
        'apigee.organizations.envgroups.list' : '$.environmentGroups',
        'apigee.organizations.hostSecurityReports.list' : '$.securityReports',
        'apigee.organizations.instances.natAddresses.list' : '$.natAddresses',
        'apigee.organizations.operations.list' : '$.operations',
        'apigee.organizations.environments.securityIncidents.list' : '$.securityIncidents',
        'apigee.organizations.securityProfiles.list' : '$.securityProfiles',
        'apigee.organizations.securityProfiles.listRevisions' : '$.securityProfiles',
    },
    apigeeregistry: {
        'apigeeregistry.projects.locations.apis.list' : '$.apis',
        'apigeeregistry.projects.locations.artifacts.list' : '$.artifacts',
        'apigeeregistry.projects.locations.apis.deployments.list' : '$.apiDeployments',
        'apigeeregistry.projects.locations.apis.deployments.listRevisions' : '$.apiDeployments',
        'apigeeregistry.projects.locations.list' : '$.locations',
        'apigeeregistry.projects.locations.operations.list' : '$.operations',
        'apigeeregistry.projects.locations.apis.versions.specs.list' : '$.apiSpecs',
        'apigeeregistry.projets.locations.apis.versions.specs.listRevisions' : '$.apiSpecs',
        'apigeeregistry.projects.locations.apis.versions.list' : '$.apiVersions',
    },
    apikeys: {
        'apikeys.projects.locations.keys.list' : '$.keys',
    },
    appengine: {
        'appengine.apps.authorizedCertificates.list' : '$.certificates',
        'appengine.apps.authorizedDomains.list' : '$.domains',
        'appengine.apps.locations.list' : '$.locations',
        'appengine.apps.operations.list' : '$.operations',
        'appengine.apps.services.list' : '$.services',
        'appengine.apps.services.versions.list' : '$.versions',
    },
    artifactregistry: {
        'artifactregistry.projects.locations.list' : '$.locations',
        'artifactregistry.projects.locations.repositories.mavenArtifacts.list' : '$.mavenArtifacts',
        'artifactregistry.projects.locations.repositories.npmPackages.list' : '$.npmPackages',
        'artifactregistry.projects.locations.repositories.list' : '$.repositories',
        'artifactregistry.projects.locations.repositories.packages.tags.list' : '$.tags',
        'artifactregistry.projects.locations.repositories.packages.versions.list' : '$.versions',
    },
    assuredworkloads: {
        'assuredworkloads.organizations.locations.operations.list' : '$.operations',
        'assuredworkloads.organizations.locations.workloads.violations.list' : '$.violations',
        'assuredworkloads.organizations.locations.workloads.list' : '$.workloads',
    },
    baremetalsolution: {
        'baremetalsolution.projects.locations.instances.list' : '$.instances',
        'baremetalsolution.projects.locations.list' : '$.locations',
        'baremetalsolution.projects.locations.volumes.luns.list' : '$.luns',
        'baremetalsolution.projects.locations.networks.list' : '$.networks',
        'baremetalsolution.projects.locations.nfsShares.list' : '$.nfsShares',
        'baremetalsolution.projects.locations.provisioningQuotas.list' : '$.provisioningQuotas',
        'baremetalsolution.projects.locations.sshKeys.list' : '$.sshKeys',
        'baremetalsolution.projects.locations.volumes.list' : '$.volumes',

    },
    batch: {
        'batch.projects.locations.jobs.list' : '$.jobs',
        'batch.projects.locations.list' : '$.locations',
        'batch.projects.locations.operations.list' : '$.operations',
        'batch.projects.locations.jobs.taskGroups.tasks.list' : '$.tasks',
    },
    beyondcorp: {
        'beyondcorp.projects.locations.appConnections.list' : '$.appConnections',
        'beyondcorp.projects.locations.appConnectors.list' : '$.appConnectors',
        'beyondcorp.projects.locations.appGateways.list' : '$.appGateways',
        'beyondcorp.projects.locations.list' : '$.locations',
        'beyondcorp.organizations.locations.operations.list' : '$.operations',

    },
    bigquery: {
        'bigquery.datasets.list' : '$.datasets',
        'bigquery.models.list' : '$.models',
        'bigquery.projects.list' : '$.projects',
        'bigquery.rowAccessPolicies.list' : '$.rowAccessPolicies',
        'bigquery.tables.list' : '$.tables',
    },
    // bigqueryconnection: {},
    bigquerydatatransfer: {
        'bigquerydatatransfer.projects.locations.list' : '$.locations',
        'bigquerydatatransfer.projects.locations.transferConfigs.runs.list' : '$.transferRuns',
        'bigquerydatatransfer.projects.locations.transferConfigs.list' : '$.transferConfigs',
        'bigquerydatatransfer.projects.locations.transferConfigs.runs.transferLogs.list' : '$.transferMessages',
    },
    bigqueryreservation: {
        'bigqueryreservation.projects.locations.reservations.assignments.list' : '$.assignments',
    },
    bigtableadmin: {
        'bigtableadmin.projects.instances.clusters.hotTablets.list' : '$.hotTablets',
        'bigtableadmin.projects.instances.list' : '$.instances',
        'bigtableadmin.projects.locations.list' : '$.locations',
        'bigtableadmin.operations.projects.operations.list' : '$.operations',
        'bigtableadmin.projects.instances.tables.list' : '$.tables',
    },
    billingbudgets: {
        'billingbudgets.billingAccounts.budgets.list' : '$.budgets',
    },
    // binaryauthorization: {},
    blockchainnodeengine: {
        'blockchainnodeengine.projects.locations.blockchainNodes.list' : '$.blockchainNodes',
        'blockchainnodeengine.projects.locations.list' : '$.locations',
        'blockchainnodeengine.projects.locations.operations.list' : '$.operations',
    },
    certificatemanager: {
        'certificatemanager.projects.locations.certificateIssuanceConfigs.list' : '$.certificateIssuanceConfigs',
        'certificatemanager.projects.locations.certificateMaps.certificateMapEntries.list' : '$.certificateMapEntries',
        'certificatemanager.projects.locations.certificateMaps.list' : '$.certificateMaps',
        'certificatemanager.projects.locations.certificates.list' : '$.certificates',
        'certificatemanager.projects.locations.dnsAuthorizations.list' : '$.dnsAuthorizations',
        'certificatemanager.projects.locations.list' : '$.locations',
        'certificatemanager.projects.locations.operations.list' : '$.operations',
        'certificatemanager.projects.locations.trustConfigs.list' : '$.trustConfigs',
    },
    cloudasset: {
        'cloudasset.assets.list' : '$.assets',
        'cloudasset.savedQueries.list' : '$.savedQueries',
    },
    cloudbilling: {
        'cloudbilling.billingAccounts.list' : '$.billingAccounts',
        'cloudbilling.billingAccounts.projects.list' : '$.projectBillingInfo',
        'cloudbilling.services.list' : '$.services',
        'cloudbilling.services.skus.list' : '$.skus',
    },
    cloudbuild: {
        'cloudbuild.projects.locations.bitbucketServerConfigs.list' : '$.bitbucketServerConfigs',
        'cloudbuild.projects.builds.list' : '$.builds',
        'cloudbuild.projects.locations.gitLabConfigs.list' : '$.gitlabConfigs',
        'cloudbuild.projects.locations.bitbucketServerConfigs.repos.list' : '$.bitbucketServerRepositories',
        'cloudbuild.projects.locations.gitLabConfigs.repos.list' : '$.gitlabRepositories',
        'cloudbuild.projects.locations.triggers.list' : '$.triggers',
        'cloudbuild.projects.locations.workerPools.list' : '$.workerPools',
    },
    clouddeploy: {
        'clouddeploy.projects.locations.deliveryPipelines.list' : '$.deliveryPipelines',
        'clouddeploy.projects.locations.list' : '$.locations',
        'clouddeploy.projects.locations.operations.list' : '$.operations',
        'clouddeploy.projects.locations.deliveryPipelines.releases.list' : '$.releases',
        'clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.list' : '$.rollouts',
    },
    clouderrorreporting: {
        'clouderrorreporting.projects.events.list' : '$.errorEvents',
        'clouderrorreporting.projects.groupStats.list' : '$.errorGroupStats',
    },
    cloudfunctions: {
        'cloudfunctions.projects.locations.functions.list' : '$.functions',
        'cloudfunctions.projects.locations.list' : '$.locations',
        'cloudfunctions.projects.locations.operations.list' : '$.operations',
    },
    cloudidentity: {
        'cloudidentity.devices.deviceUsers.clientStates.list' : '$.clientStates',
        'cloudidentity.devices.deviceUsers.list' : '$.deviceUsers',
        'cloudidentity.devices.list' : '$.devices',
        'cloudidentity.groups.list' : '$.groups',
        'cloudidentity.inboundSamlSsoProfiles.idpCredentials.list' : '$.idpCredentials',
        'cloudidentity.groups.memberships.list' : '$.memberships', 
    },
    cloudkms: {
    'cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.list' : '$.cryptoKeyVersions',
    'cloudkms.projects.locations.keyRings.cryptoKeys.list' : '$.cryptoKeys',
    'cloudkms.projects.locations.list' : '$.locations',
    },
    // cloudprofiler: {},
    cloudresourcemanager: {
        'cloudresourcemanager.effectiveTags.list' : '$.effectiveTags',
        'cloudresourcemanager.folders.list' : '$.folders',
        'cloudresourcemanager.projects.list' : '$.projects',
        'cloudresourcemanager.liens.list' : '$.liens',
        'cloudresourcemanager.tagBindings.list' : '$.tagBindings',
        'cloudresourcemanager.tagValues.tagHolds.list' : '$.tagHolds',
        'cloudresourcemanager.tagKeys.list' : '$.tagKeys',
        'cloudresourcemanager.tagValues.list' : '$.tagValues',
    },
    cloudscheduler: {
        'cloudscheduler.projects.locations.list' : '$.locations',
    },
    cloudshell: {
        'cloudshell.operations.list' : '$.operations',
    },
    cloudsupport: {
        'cloudsupport.cases.attachments.list' : '$.attachments',
        'cloudsupport.cases.comments.list' : '$.comments',
    },
    cloudtasks: {
        'cloudtasks.projects.locations.list' : '$.locations',
        'cloudtasks.projects.locations.queues.tasks.list' : '$.tasks',
    },
    // cloudtrace: {},
    composer: {
        'composer.projects.locations.environments.list' : '$.environments',
        'composer.projects.locations.imageVersions.list' : '$.imageVersions',
        'composer.projects.locations.operations.list' : '$.operations',
    },
    compute: {
        'compute.routers.getNatMappingInfo' : '$.result',
        'compute.projects.getXpnResources' : '$.resources',
    },
    connectors: {
        'connectors.projects.locations.connections.actions.list' : '$.actions',
        'connectors.projects.locations.connections.entityTypes.entities.list' : '$.entities',
        'connectors.projects.locations.connections.entityTypes.list' : '$.types',
   },
    contactcenteraiplatform: {
        'contactcenteraiplatform.projects.locations.contactCenters.list' : '$.contactCenters',
        'contactcenteraiplatform.projects.locations.list' : '$.locations',
        'contactcenteraiplatform.projects.locations.operations.list' : '$.operations',
    },
    contactcenterinsights: {
        'contactcenterinsights.projects.locations.conversations.analyses.list' : '$.analyses',
        'contactcenterinsights.projects.locations.conversations.list' : '$.conversations',  
        'contactcenterinsights.projects.locations.operations.list' : '$.operations',
        'contactcenterinsights.projects.locations.phraseMatchers.list' : '$.phraseMatchers',
        'contactcenterinsights.projects.locations.views.list' : '$.views', 
    },
    container: {
        'container.projects.aggregated.usableSubnetworks.list' : '$.subnetworks',
    },
    // containeranalysis: {},
    // contentwarehouse: {},
    datacatalog: {
        'datacatalog.projects.locations.entryGroups.entries.list' : '$.entries',
        'datacatalog.projects.locations.operations.list' : '$.operations',
        'datacatalog.projects.locations.taxonomies.policyTags.list' : '$.policyTags',
        'datacatalog.projects.locations.entryGroups.tags.list' : '$.tags',
    },
    dataflow: {
        'dataflow.projects.locations.jobs.list' : '$.jobs',
        'dataflow.projects.locations.jobs.getExecutionDetails' : '$.stages',
        'dataflow.projects.locations.jobs.messages.list' : '$.jobMessages',
        'dataflow.projects.locations.jobs.stages.getExecutionDetails' : '$.workers',
    },
    dataform: {
        'dataform.projects.locations.list' : '$.locations',
        'dataform.projects.locations.repositories.list' : '$.repositories',
        'dataform.projects.locations.repositories.workflowConfigs.list' : '$.workflowConfigs',
        'dataform.projects.locations.repositories.workflowInvocations.list' : '$.workflowInvocations',
        'dataform.projects.locations.repositories.workspaces.list' : '$.workspaces',
    },
    datafusion: {

        
    },
    datalabeling: {},
    datalineage: {},
    datamigration: {},
    datapipelines: {},
    dataplex: {},
    dataproc: {},
    datastore: {},
    datastream: {},
    deploymentmanager: {},
    dialogflow: {},
    discoveryengine: {},
    dlp: {},
    dns: {},
    documentai: {},
    domains: {},
    essentialcontacts: {},
    eventarc: {},
    file: {},
    firestore: {},
    gameservices: {},
    gkebackup: {},
    gkehub: {},
    gkeonprem: {},
    healthcare: {},
    iam: {},
    iamcredentials: {},
    iap: {},
    identitytoolkit: {},
    ids: {},
    integrations: {},
    jobs: {},
    kmsinventory: {},
    language: {},
    libraryagent: {},
    lifesciences: {},
    logging: {},
    managedidentities: {},
    memcache: {},
    metastore: {},
    migrationcenter: {},
    ml: {},
    monitoring: {},
    networkconnectivity: {},
    networkmanagement: {},
    networksecurity: {},
    networkservices: {},
    notebooks: {},
    ondemandscanning: {},
    orgpolicy: {},
    osconfig: {},
    oslogin: {},
    places: {},
    policyanalyzer: {},
    policysimulator: {},
    policytroubleshooter: {},
    privateca: {},
    prod_tt_sasportal: {},
    publicca: {},
    pubsub: {},
    pubsublite: {},
    recaptchaenterprise: {},
    recommendationengine: {},
    recommender: {},
    redis: {},
    resourcesettings: {},
    retail: {},
    run: {},
    runtimeconfig: {},
    sasportal: {},
    secretmanager: {},
    securitycenter: {},
    serviceconsumermanagement: {},
    servicecontrol: {},
    servicedirectory: {},
    servicemanagement: {},
    servicenetworking: {},
    serviceusage: {},
    sourcerepo: {},
    spanner: {},
    speech: {},
    sqladmin: {},
    storage: {},
    storagetransfer: {},
    testing: {},
    texttospeech: {},
    tpu: {},
    trafficdirector: {},
    transcoder: {},
    translate: {},
    videointelligence: {},
    vision: {},
    vmmigration: {},
    vpcaccess: {},
    webrisk: {},
    websecurityscanner: {},
    workflowexecutions: {},
    workflows: {},
    workloadmanager: {},
    workstations: {},    
};

export const resourceNameOverridesByResourceName = {
    contactcenteraiplatform: {
        'contact_centers_authentication-config' : 'authentication_config',
    },
    container: {
        'well-known_openid-configuration' : 'well_known_openid_configuration',
    }
};

export const sqlVerbOverrides = {
    cloudbuild: {
        'cloudbuild.projects.locations.gitLabConfigs.removeGitLabConnectedRepository' : 'exec',
        'cloudbuild.projects.locations.bitbucketServerConfigs.removeBitbucketServerConnectedRepository' : 'exec',
    },
    dataform: {
        'dataform.projects.locations.repositories.workspaces.readFile' : 'exec',        
    },
    documentai: {
        'documentai.projects.locations.fetchProcessorTypes' : 'exec',        
    },
};
